From c1014c34344050b3611c4545b8c3b8397b2cad2f Mon Sep 17 00:00:00 2001
From: AntoinePrv <AntoinePrv@users.noreply.github.com>
Date: Tue, 7 Dec 2021 14:58:21 +0100
Subject: [PATCH] Remove TBB installs

---
 papilo/CMakeLists.txt              |  25 -----
 papilo/cmake/Modules/FindTBB.cmake | 151 -----------------------------
 papilo/papilo-config.cmake.in      |   1 -
 3 files changed, 177 deletions(-)
 delete mode 100644 papilo/cmake/Modules/FindTBB.cmake

diff --git a/papilo/CMakeLists.txt b/papilo/CMakeLists.txt
index 2f1df24..78580cf 100644
--- a/papilo/CMakeLists.txt
+++ b/papilo/CMakeLists.txt
@@ -120,18 +120,6 @@ endif()
 
 find_package(Threads REQUIRED)
 
-if(CMAKE_SYSTEM_NAME STREQUAL "Windows")
-   file(TO_CMAKE_PATH "$ENV{TBBROOT}" TBB_ROOTDIR)
-   if(CMAKE_CL_64)
-      set(TBB_DLL "${TBB_ROOTDIR}/../redist/intel64/tbb/vc_mt/tbb.dll")
-   else()
-      set(TBB_DLL "${TBB_ROOTDIR}/../redist/ia32/tbb/vc_mt/tbb.dll")
-   endif()
-   if(EXISTS "${TBB_DLL}")
-      install(FILES "${TBB_DLL}" DESTINATION bin)
-   endif()
-endif()
-
 target_link_libraries(papilo
     INTERFACE TBB::tbb Threads::Threads $<$<PLATFORM_ID:Linux>:rt>)
 target_link_libraries(papilo
@@ -389,13 +377,11 @@ install(FILES
 
 # configure the config file for the build tree
 set(QUADMATH_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/Modules)
-set(TBB_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake/Modules)
 configure_file(${PROJECT_SOURCE_DIR}/papilo-config.cmake.in
   "${CMAKE_BINARY_DIR}/papilo-config.cmake" @ONLY)
 
 # configure and install config file for installation
 set(QUADMATH_MODULE_PATH "\${CMAKE_CURRENT_LIST_DIR}")
-set(TBB_MODULE_PATH "\${CMAKE_CURRENT_LIST_DIR}")
 configure_file(${PROJECT_SOURCE_DIR}/papilo-config.cmake.in
     "${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/papilo-config.cmake" @ONLY)
 
@@ -409,17 +395,6 @@ endif()
 # install dependencies
 install(FILES ${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/papilo-config.cmake
    DESTINATION lib/cmake/papilo)
-install(FILES ${PROJECT_SOURCE_DIR}/cmake/Modules/FindTBB.cmake
-   DESTINATION lib/cmake/papilo)
-if(MSVC)
-   install(FILES ${TBB_DLL} DESTINATION lib/cmake/papilo)
-   if(EXISTS "${TBB_tbb_DLL}")
-      install(FILES "${TBB_tbb_DLL}" DESTINATION bin)
-   endif()
-   if(EXISTS "${TBB_tbbmalloc_DLL}")
-      install(FILES "${TBB_tbbmalloc_DLL}" DESTINATION bin)
-   endif()
-endif()
 
 # export targets for build-tree linking
 export(TARGETS papilo ${CLUSOL_TARGET} FILE "${CMAKE_BINARY_DIR}/papilo-targets.cmake")
diff --git a/papilo/cmake/Modules/FindTBB.cmake b/papilo/cmake/Modules/FindTBB.cmake
deleted file mode 100644
index 2588c0d..0000000
--- a/papilo/cmake/Modules/FindTBB.cmake
+++ /dev/null
@@ -1,151 +0,0 @@
-# Copyright (c) 2020-2021 Intel Corporation
-#
-# Licensed under the Apache License, Version 2.0 (the "License");
-# you may not use this file except in compliance with the License.
-# You may obtain a copy of the License at
-#
-#     http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-include(FindPackageHandleStandardArgs)
-
-# Define search paths based on user input and environment variables
-set(TBB_SEARCH_DIR ${TBB_LIBRARY_DIR} ${TBB_ROOT_DIR} ${TBB_DIR} $ENV{TBB_INSTALL_DIR} $ENV{TBBROOT})
-
-# Firstly search for TBB in config mode (i.e. search for TBBConfig.cmake).
-find_package(TBB CONFIG HINTS ${TBB_SEARCH_DIR})
-if (TBB_FOUND)
-    find_package_handle_standard_args(TBB CONFIG_MODE)
-    return()
-endif()
-
-if (NOT TBB_FIND_COMPONENTS)
-    set(TBB_FIND_COMPONENTS tbb tbbmalloc)
-    foreach (_tbb_component ${TBB_FIND_COMPONENTS})
-        set(TBB_FIND_REQUIRED_${_tbb_component} 1)
-    endforeach()
-endif()
-
-# for windows add additional default search paths
-if(WIN32)
-    set(TBB_DEFAULT_SEARCH_DIR  "C:/Program Files/Intel/TBB"
-                                "C:/Program Files (x86)/Intel/TBB")
-
-    if (CMAKE_CL_64)
-        list(APPEND TBB_LIB_PATH_SUFFIXES lib/intel64/vc14)
-        list(APPEND TBB_LIB_PATH_SUFFIXES bin/intel64/vc14)
-    else ()
-        list(APPEND TBB_LIB_PATH_SUFFIXES lib/ia32/vc14)
-        list(APPEND TBB_LIB_PATH_SUFFIXES bin/ia32/vc14)
-    endif ()
-
-    list(APPEND ADDITIONAL_LIB_DIRS ENV PATH ENV LIB)
-    list(APPEND ADDITIONAL_INCLUDE_DIRS ENV INCLUDE ENV CPATH)
-elseif(APPLE)
-    foreach (i tbb tbb@2020 tbb@2020_U1 tbb@2020_U2 tbb@2020_U3 tbb@2020_U3_1)
-        foreach (j 2020_U1 2020_U2 2020_U3 2020_U3_1)
-            list(APPEND TBB_LIB_PATH_SUFFIXES ${i}/${j}/lib)
-        endforeach()
-    endforeach()
-else()
-    list(APPEND ADDITIONAL_LIB_DIRS ENV LIBRARY_PATH ENV LD_LIBRARY_PATH ENV DYLD_LIBRARY_PATH)
-    list(APPEND ADDITIONAL_INCLUDE_DIRS ENV CPATH ENV C_INCLUDE_PATH ENV CPLUS_INCLUDE_PATH ENV INCLUDE_PATH)
-endif()
-
-find_path(_tbb_include_dir
-    NAMES oneapi/tbb.h tbb/tbb.h
-    HINTS ${TBB_SEARCH_DIR}
-    PATHS ${ADDITIONAL_INCLUDE_DIRS} ${TBB_DEFAULT_SEARCH_DIR})
-
-if(_tbb_include_dir)
-    foreach (_tbb_version_file "${_tbb_include_dir}/oneapi/tbb/version.h" "${_tbb_include_dir}/tbb/tbb_stddef.h")
-        if(EXISTS "${_tbb_version_file}")
-            file(READ "${_tbb_version_file}" _tbb_version_info)
-            break()
-        endif()
-    endforeach()
-    string(REGEX REPLACE ".*#define TBB_VERSION_MAJOR ([0-9]+).*" "\\1" TBB_VERSION_MAJOR "${_tbb_version_info}")
-    string(REGEX REPLACE ".*#define TBB_VERSION_MINOR ([0-9]+).*" "\\1" TBB_VERSION_MINOR "${_tbb_version_info}")
-    string(REGEX REPLACE ".*#define TBB_INTERFACE_VERSION ([0-9]+).*" "\\1" TBB_INTERFACE_VERSION "${_tbb_version_info}")
-    set(TBB_VERSION "${TBB_VERSION_MAJOR}.${TBB_VERSION_MINOR}")
-
-    set(_TBB_BUILD_MODES RELEASE DEBUG)
-    set(_TBB_DEBUG_SUFFIX _debug)
-
-    foreach (_tbb_component ${TBB_FIND_COMPONENTS})
-        if (NOT TARGET TBB::${_tbb_component})
-            add_library(TBB::${_tbb_component} SHARED IMPORTED)
-            set_property(TARGET TBB::${_tbb_component} APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${_tbb_include_dir})
-
-            foreach(_TBB_BUILD_MODE ${_TBB_BUILD_MODES})
-                set(_tbb_component_lib_name ${_tbb_component}${_TBB_${_TBB_BUILD_MODE}_SUFFIX})
-
-                if(WIN32)
-                    find_library(${_tbb_component_lib_name}_lib
-                        NAMES ${_tbb_component_lib_name}12.lib ${_tbb_component_lib_name}
-                        HINTS ${TBB_SEARCH_DIR}
-                        PATHS ${TBB_DEFAULT_SEARCH_DIR} ${ADDITIONAL_LIB_DIRS}
-                        PATH_SUFFIXES ${TBB_LIB_PATH_SUFFIXES})
-                    find_file(${_tbb_component_lib_name}_dll
-                        NAMES ${_tbb_component_lib_name}.dll
-                        HINTS ${TBB_SEARCH_DIR}
-                        PATHS ${TBB_DEFAULT_SEARCH_DIR} ${ADDITIONAL_LIB_DIRS}
-                        PATH_SUFFIXES ${TBB_LIB_PATH_SUFFIXES})
-
-                    set_target_properties(TBB::${_tbb_component} PROPERTIES
-                                          IMPORTED_LOCATION_${_TBB_BUILD_MODE} "${${_tbb_component_lib_name}_dll}"
-                                          IMPORTED_IMPLIB_${_TBB_BUILD_MODE}   "${${_tbb_component_lib_name}_lib}"
-                                          )
-                elseif(APPLE)
-                    find_library(${_tbb_component_lib_name}_so
-                        NAMES lib${_tbb_component_lib_name}.so.12 lib${_tbb_component_lib_name}.12.dylib lib${_tbb_component_lib_name}.dylib
-                        HINTS ${TBB_SEARCH_DIR}
-                        PATHS ${ADDITIONAL_LIB_DIRS} /usr/local/Cellar/
-                        PATH_SUFFIXES ${TBB_LIB_PATH_SUFFIXES})
-
-                    set_target_properties(TBB::${_tbb_component} PROPERTIES
-                                          IMPORTED_LOCATION_${_TBB_BUILD_MODE} "${${_tbb_component_lib_name}_so}"
-                                          )
-                else() # Linux etc.
-                    find_library(${_tbb_component_lib_name}_so lib${_tbb_component_lib_name}.so.12 lib${_tbb_component_lib_name}.12.dylib lib${_tbb_component_lib_name}.so.2
-                        HINTS ${TBB_SEARCH_DIR}
-                        PATHS ${ADDITIONAL_LIB_DIRS} ${TBB_DEFAULT_SEARCH_DIR}
-                        PATH_SUFFIXES ${TBB_LIB_PATH_SUFFIXES})
-
-                    set_target_properties(TBB::${_tbb_component} PROPERTIES
-                                          IMPORTED_LOCATION_${_TBB_BUILD_MODE} "${${_tbb_component_lib_name}_so}"
-                                          )
-                endif()
-
-                if (${_tbb_component_lib_name}_lib AND ${_tbb_component_lib_name}_dll OR ${_tbb_component_lib_name}_so)
-                    set_property(TARGET TBB::${_tbb_component} APPEND PROPERTY IMPORTED_CONFIGURATIONS ${_TBB_BUILD_MODE})
-                    list(APPEND TBB_IMPORTED_TARGETS TBB::${_tbb_component})
-                    set(TBB_${_tbb_component}_FOUND 1)
-                endif()
-
-                unset(${_tbb_component_lib_name}_lib CACHE)
-                unset(${_tbb_component_lib_name}_dll CACHE)
-                if(MSVC)
-                    set(TBB_${_tbb_component_lib_name}_DLL ${${_tbb_component_lib_name}_dll})
-                endif()
-                unset(${_tbb_component_lib_name}_so CACHE)
-                unset(_tbb_component_lib_name)
-            endforeach()
-        endif()
-    endforeach()
-    unset(_TBB_BUILD_MODESS)
-    unset(_TBB_DEBUG_SUFFIX)
-endif()
-unset(_tbb_include_dir CACHE)
-
-list(REMOVE_DUPLICATES TBB_IMPORTED_TARGETS)
-
-find_package_handle_standard_args(TBB
-    REQUIRED_VARS TBB_IMPORTED_TARGETS
-    VERSION_VAR TBB_VERSION
-    HANDLE_COMPONENTS)
diff --git a/papilo/papilo-config.cmake.in b/papilo/papilo-config.cmake.in
index b9ce892..b065bb1 100644
--- a/papilo/papilo-config.cmake.in
+++ b/papilo/papilo-config.cmake.in
@@ -13,7 +13,6 @@ if(@PAPILO_HAVE_FLOAT128@)
 endif()
 
 if(NOT TBB_FOUND)
-    list(APPEND CMAKE_MODULE_PATH @TBB_MODULE_PATH@)
     find_package(TBB 2018 COMPONENTS tbb tbbmalloc REQUIRED HINTS ${CMAKE_CURRENT_LIST_DIR}/_deps/local/)
 endif()
 if(NOT TBB_FOUND)
-- 
2.30.2

